name: Deploy Mobile API to EC2

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/github_ci
          chmod 600 ~/.ssh/github_ci
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: Fix EC2 directory permissions before rsync
        run: |
          ssh -i ~/.ssh/github_ci ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            # Ensure the Laravel directory exists and is writable
            sudo mkdir -p /var/www/api
            sudo chown -R $USER:$USER /var/www/api
            sudo chmod -R 775 /var/www/api
          EOF

      - name: Deploy Laravel via rsync
        run: |
          rsync -avz \
            --exclude ".git" \
            --exclude "node_modules" \
            --exclude "vendor" \
            --exclude ".env" \
            --exclude "database/database.sqlite" \  # important: prevent overwriting EC2's DB
            -e "ssh -i ~/.ssh/github_ci" \
            ./ ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/var/www/api

      - name: Run post-deploy commands on EC2
        run: |
          ssh -i ~/.ssh/github_ci ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            cd /var/www/api

            # Ensure the database is writable, but not overwritten
            sudo chown -R www-data:www-data database
            sudo chmod -R 775 database

            # Set proper permissions for other Laravel folders
            chmod -R 775 storage bootstrap/cache
            sudo chgrp -R www-data storage bootstrap/cache

            # Laravel deployment steps
            composer install --no-dev --prefer-dist --no-progress --no-suggest

            # Run migrations and seeders without affecting the existing database file
            php artisan migrate --force
            php artisan db:seed --force

            # Cache config, routes, views
            php artisan config:cache
            php artisan route:cache
            php artisan view:cache

            # Restart PHP service
            sudo systemctl restart php8.2-fpm
          EOF
